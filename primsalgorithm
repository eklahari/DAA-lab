#include <stdio.h>

int prim(int cost[10][10], int n, int t[10][2]);

int main() {
    int cost[10][10], i, j, n, t[10][2], min;
    int graph[10][10] = {
        {0, 28, 0, 0, 0, 10, 0},
        {28, 0, 16, 0, 0, 0, 14},
        {0, 16, 0, 12, 0, 0, 0},
        {0, 0, 12, 0, 22, 0, 18},
        {0, 0, 0, 22, 0, 25, 24},
        {10, 0, 0, 0, 25, 0, 0},
        {0, 14, 0, 18, 24, 0, 0}
    };

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++) {
            cost[i][j] = graph[i - 1][j - 1];
            if (cost[i][j] == 0)
                cost[i][j] = 9999;
        }

    min = prim(cost, n, t);
    printf("The minimum cost is %d\n", min);

    return 0;
}

int prim(int cost[10][10], int n, int t[10][2]) {
    int mincost, min, p, q, k, i, j, near[10], l, m;
    mincost = 9999;

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            if (mincost > cost[i][j]) {
                mincost = cost[i][j];
                k = i;
                l = j;
            }

    t[1][1] = k;
    t[1][2] = l;

    for (i = 1; i <= n; i++) {
        if (cost[i][k] < cost[i][l])
            near[i] = k;
        else
            near[i] = l;
    }

    mincost = cost[k][l];
    near[k] = 0;
    near[l] = 0;

    for (i = 2; i < n; i++) {
        min = 9999;

        for (j = 1; j <= n; j++) {
            if (near[j] != 0) {
                if (min > cost[j][near[j]]) {
                    min = cost[j][near[j]];
                    p = j;
                    q = near[j];
                }
            }
        }

        t[i][1] = p;
        t[i][2] = q;
        mincost = mincost + cost[p][q];
        near[p] = 0;

        for (k = 1; k <= n; k++) {
            if (near[k] != 0 && cost[k][p] < cost[k][near[k]])
                near[k] = p;
        }
    }

    printf("Spanning tree is\n");

    for (i = 1; i < n; i++) {
        for (j = 1; j <= 2; j++)
            printf("%d\t", t[i][j]);
        printf("\n");
    }

    return mincost;
}


output:
enter no of nodes7
spanning tree is
1	6	
5	6	
4	5	
3	4	
2	3	
7	2	
the minimum cost is 99

