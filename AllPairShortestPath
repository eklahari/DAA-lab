#include <stdio.h>
#include <stdlib.h>

void allpair(int cost[10][10], int n, int a[10][10]);
int min(int a, int b);

int main() {
    int i, j, n, cost[10][10], a[10][10];
    int graph[10][10] = {
        {0, 3, 8, 0, -4},
        {0, 0, 0, 1, 7},
        {0, 4, 0, 0, 0},
        {2, 0, -5, 0, 0},
        {0, 0, 0, 6, 0},
    };

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++) {
            cost[i][j] = graph[i - 1][j - 1];
            if (cost[i][j] == 0)
                cost[i][j] = 999;
        }

    allpair(cost, n, a);

    printf("The shortest distance matrix:\n");

    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
          if(i!=j)
            printf("%3d  ", a[i][j]); // Adjusted format to use 3 spaces for alignment
          else
           printf("%3d  ", 0);
        }
        printf("\n");
    }

    return 0;
}

void allpair(int cost[10][10], int n, int a[10][10]) {
    int i, j, k;

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            a[i][j] = cost[i][j];

    for (k = 1; k <= n; k++)
        for (i = 1; i <= n; i++)
            for (j = 1; j <= n; j++)
                a[i][j] = min(a[i][k] + a[k][j], a[i][j]);
}

int min(int a, int b) {
    if (a > b)
        return b;
    return a;
}
