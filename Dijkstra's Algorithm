#include <stdio.h>
#include <stdlib.h>

void dijkstra(int cost[10][10], int n, int dist[10], int prev[10], int v);

int main() {
    int i, j, cost[10][10], dist[10], prev[10], v, n, m, a[10], k;
    int graph[10][10] = {
        {0, 1, 2, 0, 0, 0, 3},
        {0, 0, 0, 4, 0, 0, 0},
        {0, 0, 0, 0, 3, 1, 0},
        {0, 0, 0, 0, 0, 1, 0},
        {0, 0, 0, 0, 0, 2, 0},
        {0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 8, 0}
    };

    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    printf("Enter edges\n");

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++) {
            cost[i][j] = graph[i - 1][j - 1];
            if (cost[i][j] == 0)
                cost[i][j] = 999;
        }

    printf("Enter the source node: ");
    scanf("%d", &v);

    dijkstra(cost, n, dist, prev, v);

    printf("Shortest distance from source vertex to each other vertex:\n");

    for (i = 1; i <= n; i++) {
        printf("|%d to %d| is %d\n", v, i, dist[i]);
        printf("Path is %d", v);

        for (j = i, k = 1; j != v; j = prev[j], k++) {
            a[k] = j;
        }

        for (m = k - 1; m >= 1; m--)
            printf("->%d", a[m]);

        printf("\n");
    }

    return 0;
}

void dijkstra(int cost[10][10], int n, int dist[10], int prev[10], int v) {
    int i, j, min, u, w, s[10];

    for (i = 1; i <= n; i++) {
        s[i] = 0;
        dist[i] = cost[v][i];
        prev[i] = v;
    }

    s[v] = 1;
    dist[v] = 0;

    for (i = 2; i < n; i++) {
        min = 999;

        for (j = 1; j <= n; j++)
            if (s[j] == 0 && min > dist[j]) {
                u = j;
                min = dist[j];
            }

        s[u] = 1;

        for (w = 1; w <= n; w++) {
            if (cost[u][w] != 999 && s[w] == 0) {
                if (dist[w] > dist[u] + cost[u][w]) {
                    dist[w] = dist[u] + cost[u][w];
                    prev[w] = u;
                }
            }
        }
    }
}
output:
Enter the number of nodes: 7
Enter edges
Enter the source node: 1
Shortest distance from source vertex to each other vertex:
|1 to 1| is 0
Path is 1
|1 to 2| is 1
Path is 1->2
|1 to 3| is 2
Path is 1->3
|1 to 4| is 5
Path is 1->2->4
|1 to 5| is 5
Path is 1->3->5
|1 to 6| is 3
Path is 1->3->6
|1 to 7| is 3
Path is 1->7


